__start:
__text_start:
    002A E5CF      LDI	R28,0x5F
    002B E0D4      LDI	R29,4
    002C BFCD      OUT	0x3D,R28
    002D BFDE      OUT	0x3E,R29
    002E 51C0      SUBI	R28,0x10
    002F 40D0      SBCI	R29,0
    0030 EA0A      LDI	R16,0xAA
    0031 8308      STD	Y+0,R16
    0032 2400      CLR	R0
    0033 E6E0      LDI	R30,0x60
    0034 E0F0      LDI	R31,0
    0035 E010      LDI	R17,0
    0036 36E0      CPI	R30,0x60
    0037 07F1      CPC	R31,R17
    0038 F011      BEQ	0x003B
    0039 9201      ST	R0,Z+
    003A CFFB      RJMP	0x0036
    003B 8300      STD	Z+0,R16
    003C E5E4      LDI	R30,0x54
    003D E0F0      LDI	R31,0
    003E E6A0      LDI	R26,0x60
    003F E0B0      LDI	R27,0
    0040 E010      LDI	R17,0
    0041 35E4      CPI	R30,0x54
    0042 07F1      CPC	R31,R17
    0043 F021      BEQ	0x0048
    0044 95C8      LPM
    0045 9631      ADIW	R30,1
    0046 920D      ST	R0,X+
    0047 CFF9      RJMP	0x0041
    0048 940E0072  CALL	_main
_exit:
    004A CFFF      RJMP	_exit
_delaym:
  i                    --> R20
  j                    --> R22
  n                    --> R16
    004B 940E008E  CALL	push_gset2
FILE: F:\AVRSYS~1\timee.h
(0001) //---------------Delay-----------------
(0002) //8MHz
(0003) //n ms
(0004)  void delaym (uint n)
(0005)   {
(0006)     uint  i,j;
(0007)     for (i=0;i<n;i++)
    004D 2744      CLR	R20
    004E 2755      CLR	R21
    004F C00A      RJMP	0x005A
(0008)      for (j=1324;j>0;j--)
    0050 E26C      LDI	R22,0x2C
    0051 E075      LDI	R23,5
    0052 C002      RJMP	0x0055
    0053 5061      SUBI	R22,1
    0054 4070      SBCI	R23,0
    0055 3060      CPI	R22,0
    0056 0767      CPC	R22,R23
    0057 F7D9      BNE	0x0053
    0058 5F4F      SUBI	R20,0xFF
    0059 4F5F      SBCI	R21,0xFF
    005A 1740      CP	R20,R16
    005B 0751      CPC	R21,R17
    005C F398      BCS	0x0050
    005D 940E0085  CALL	pop_gset2
    005F 9508      RET
FILE: F:\AVRSYS~1\AVRSYS~1.C
(0001) /*********************************************************/
(0002) /* Target : ATmage16/32                                  */
(0003) /* Crystal: 8.00MHz                                      */
(0004) /* PCB£ºAVR SYSTEM                                       */
(0005) /*********************************************************/
(0006) //********************************************************/
(0007)  #include <iom16v.h>
(0008)  #include <macros.h>
(0009)  #include <eeprom.h>
(0010)  
(0011)  #define  uchar unsigned char 
(0012)  #define  uint unsigned int  
(0013) //================LED(PB7)==============
(0014)  #define CLED_0  PORTB&=~BIT(PB7)   
(0015)  #define CLED_1  PORTB|=BIT(PB7)     
(0016) //======================================
(0017)  #include "timee.h" 
(0018) //======================================
(0019) //======================================
(0020) //*************I/O init*****************
(0021)  void port_init(void)
(0022)   { 
(0023)    DDRA  = 0x00;   
_port_init:
    0060 2422      CLR	R2
    0061 BA2A      OUT	0x1A,R2
(0024)    _NOP();  
    0062 0000      NOP
(0025)    PORTA = 0x00;   
    0063 BA2B      OUT	0x1B,R2
(0026)    _NOP();    
    0064 0000      NOP
(0027)    DDRB  = 0x80;   
    0065 E880      LDI	R24,0x80
    0066 BB87      OUT	0x17,R24
(0028)    _NOP();  
    0067 0000      NOP
(0029)    PORTB = 0x80;   
    0068 BB88      OUT	0x18,R24
(0030)    _NOP();       
    0069 0000      NOP
(0031)    DDRC  = 0x00;   
    006A BA24      OUT	0x14,R2
(0032)    _NOP();
    006B 0000      NOP
(0033)    PORTC = 0x00;   
    006C BA25      OUT	0x15,R2
(0034)    _NOP();    
    006D 0000      NOP
(0035)    DDRD  = 0x00;   
    006E BA21      OUT	0x11,R2
(0036)    _NOP();
    006F 0000      NOP
(0037)    PORTD = 0x00;   
    0070 BA22      OUT	0x12,R2
    0071 9508      RET
(0038)   }
(0039)  //**********************main**************************
(0040)   void main(void)
(0041)   {  
(0042)     port_init();             //I/O init
_main:
    0072 DFED      RCALL	_port_init
(0043) 	delaym(10);
    0073 E00A      LDI	R16,0xA
    0074 E010      LDI	R17,0
    0075 DFD5      RCALL	_delaym
(0044) 	port_init();             //I/O init again
    0076 DFE9      RCALL	_port_init
(0045)     delaym(10);
    0077 E00A      LDI	R16,0xA
    0078 E010      LDI	R17,0
    0079 DFD1      RCALL	_delaym
    007A C008      RJMP	0x0083
(0046)  
(0047)    while(1)
(0048)    {
(0049)     CLED_0;
    007B 98C7      CBI	0x18,7
(0050) 	delaym(100);
    007C E604      LDI	R16,0x64
    007D E010      LDI	R17,0
    007E DFCC      RCALL	_delaym
(0051) 	CLED_1;
    007F 9AC7      SBI	0x18,7
(0052) 	delaym(100);
FILE: <library>
    0080 E604      LDI	R16,0x64
    0081 E010      LDI	R17,0
    0082 DFC8      RCALL	_delaym
    0083 CFF7      RJMP	0x007B
    0084 9508      RET
pop_gset2:
    0085 E0E2      LDI	R30,2
    0086 940C0094  JMP	pop
push_gset5:
    0088 92FA      ST	R15,-Y
    0089 92EA      ST	R14,-Y
push_gset4:
    008A 92DA      ST	R13,-Y
    008B 92CA      ST	R12,-Y
push_gset3:
    008C 92BA      ST	R11,-Y
    008D 92AA      ST	R10,-Y
push_gset2:
    008E 937A      ST	R23,-Y
    008F 936A      ST	R22,-Y
push_gset1:
    0090 935A      ST	R21,-Y
    0091 934A      ST	R20,-Y
    0092 9508      RET
pop_gset1:
    0093 E0E1      LDI	R30,1
pop:
    0094 9149      LD	R20,Y+
    0095 9159      LD	R21,Y+
    0096 FDE0      SBRC	R30,0
    0097 9508      RET
    0098 9169      LD	R22,Y+
    0099 9179      LD	R23,Y+
    009A FDE1      SBRC	R30,1
    009B 9508      RET
    009C 90A9      LD	R10,Y+
    009D 90B9      LD	R11,Y+
    009E FDE2      SBRC	R30,2
    009F 9508      RET
    00A0 90C9      LD	R12,Y+
    00A1 90D9      LD	R13,Y+
    00A2 FDE3      SBRC	R30,3
    00A3 9508      RET
    00A4 90E9      LD	R14,Y+
    00A5 90F9      LD	R15,Y+
    00A6 9508      RET
