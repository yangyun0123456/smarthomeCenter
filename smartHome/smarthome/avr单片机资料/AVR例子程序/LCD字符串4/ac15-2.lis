                        .module ac15-2.c
                        .area lit(rom, con, rel)
 0000           _str0::
 0000 2D54696D652020203A20203A20202D2D  .byte 45,'T,'i,'m,'e,32,32,32,58,32,32,58,32,32,45,45
 0010 00                .byte 0
 0011                   .dbfile d:\MYDOCU~1\ac15-2\ac15-2.c
 0011                   .dbsym e str0 _str0 A[17:17]kc
 0011           _str1::
 0011 2D4154696D652020203A20203A202D2D  .byte 45,'A,'T,'i,'m,'e,32,32,32,58,32,32,58,32,45,45
 0021 00                .byte 0
 0022                   .dbsym e str1 _str1 A[17:17]kc
                        .area text(rom, con, rel)
 0000                   .dbfile d:\MYDOCU~1\ac15-2\ac15-2.c
 0000                   .dbfunc e ePutstr _ePutstr fV
 0000           ;              l -> R20
 0000           ;              i -> R22
 0000           ;            ptr -> R10,R11
 0000           ;              y -> R12
 0000           ;              x -> R14
                        .even
 0000           _ePutstr::
 0000 0E940000          xcall push_gset5
 0004 C22E              mov R12,R18
 0006 E02E              mov R14,R16
 0008 2197              sbiw R28,1
 000A AB84              ldd R10,y+11
 000C BC84              ldd R11,y+12
 000E                   .dbline -1
 000E                   .dbline 43
 000E           ; #include <iom16v.h>                   
 000E           ; #include <macros.h>
 000E           ; //-----------------------------------------------
 000E           ; #define uchar unsigned char   
 000E           ; #define uint unsigned int
 000E           ; //-------------------引脚电平的宏定义---------
 000E           ; #define LCM_RS_1 PORTB|=BIT(PB0)      
 000E           ; #define LCM_RS_0 PORTB&=~BIT(PB0) 
 000E           ; #define LCM_RW_1 PORTB|=BIT(PB1)      
 000E           ; #define LCM_RW_0 PORTB&=~BIT(PB1) 
 000E           ; #define LCM_EN_1 PORTB|=BIT(PB2)      
 000E           ; #define LCM_EN_0 PORTB&=~BIT(PB2)  
 000E           ; #define SCL_1 PORTC|=BIT(PC0)
 000E           ; #define SCL_0 PORTC&=~BIT(PC0)
 000E           ; #define SDA_1 PORTC|=BIT(PC1)
 000E           ; #define SDA_0 PORTC&=~BIT(PC1)
 000E           ; #define LED_1 PORTB|=BIT(PB7)
 000E           ; #define LED_0 PORTB&=~BIT(PB7)
 000E           ; //======================================
 000E           ; #define PIN_SDA (PINC&0x02)
 000E           ; #define DataPort PORTA                
 000E           ; #define Busy 0x80                     
 000E           ; #define xtal 8                        
 000E           ; #define Some_NOP();  _NOP();_NOP();_NOP();_NOP();_NOP();_NOP();_NOP();_NOP();
 000E           ; //======================================
 000E           ; const uchar str0[]={"-Time   :  :  --"};//待显字符串
 000E           ; const uchar str1[]={"-ATime   :  : --"};//待显字符串
 000E           ; //========函数声明=========
 000E           ; void Delay_1ms(void);
 000E           ; void Delay_nms(uint n);
 000E           ; void WaitForEnable(void);
 000E           ; void LcdWriteData(uchar W);
 000E           ; void LcdWriteCommand(uchar CMD,uchar Attribc);
 000E           ; void InitLcd(void);
 000E           ; void Display(uchar dd);
 000E           ; void DisplayOneChar(uchar x,uchar y,uchar Wdata);
 000E           ; void ePutstr(uchar x,uchar y,uchar const *ptr);
 000E           ; void port_init(void);
 000E           ; void init_devices(void);
 000E           ; void timer1_init(void);
 000E           ; //**********************显示指定座标的一串字符子函数**************
 000E           ; void ePutstr(uchar x,uchar y,uchar const *ptr)
 000E           ; {
 000E                   .dbline 44
 000E           ; uchar i,l=0;
 000E 4427              clr R20
 0010 01C0              xjmp L3
 0012           L2:
 0012                   .dbline 45
 0012                   .dbline 45
 0012 4395              inc R20
 0014                   .dbline 45
 0014           L3:
 0014                   .dbline 45
 0014           ;       while(ptr[l]>31){l++;}
 0014 E42F              mov R30,R20
 0016 FF27              clr R31
 0018 EA0D              add R30,R10
 001A FB1D              adc R31,R11
 001C E491              lpm R30,Z
 001E 8FE1              ldi R24,31
 0020 8E17              cp R24,R30
 0022 B8F3              brlo L2
 0024                   .dbline 46
 0024 6627              clr R22
 0026 14C0              xjmp L8
 0028           L5:
 0028                   .dbline 46
 0028           ;       for(i=0;i<l;i++){
 0028                   .dbline 47
 0028           ;       DisplayOneChar(x++,y,ptr[i]);
 0028 E62F              mov R30,R22
 002A FF27              clr R31
 002C EA0D              add R30,R10
 002E FB1D              adc R31,R11
 0030 E491              lpm R30,Z
 0032 E883              std y+0,R30
 0034 2C2D              mov R18,R12
 0036 2E2C              mov R2,R14
 0038 822D              mov R24,R2
 003A 8F5F              subi R24,255    ; addi 1
 003C E82E              mov R14,R24
 003E 022D              mov R16,R2
 0040 1ED0              xcall _DisplayOneChar
 0042                   .dbline 48
 0042           ;       if(x==16){
 0042 8E2D              mov R24,R14
 0044 8031              cpi R24,16
 0046 19F4              brne L9
 0048                   .dbline 48
 0048                   .dbline 49
 0048           ;               x=0;y^=1;
 0048 EE24              clr R14
 004A                   .dbline 49
 004A 81E0              ldi R24,1
 004C C826              eor R12,R24
 004E                   .dbline 50
 004E           ;       }
 004E           L9:
 004E                   .dbline 51
 004E           L6:
 004E                   .dbline 46
 004E 6395              inc R22
 0050           L8:
 0050                   .dbline 46
 0050 6417              cp R22,R20
 0052 50F3              brlo L5
 0054                   .dbline -2
 0054           L1:
 0054 2196              adiw R28,1
 0056 0E940000          xcall pop_gset5
 005A                   .dbline 0 ; func end
 005A 0895              ret
 005C                   .dbsym r l 20 c
 005C                   .dbsym r i 22 c
 005C                   .dbsym r ptr 10 pkc
 005C                   .dbsym r y 12 c
 005C                   .dbsym r x 14 c
 005C                   .dbend
 005C                   .dbfunc e LocateXY _LocateXY fV
 005C           ;           temp -> R20
 005C           ;           posy -> R22
 005C           ;           posx -> R10
                        .even
 005C           _LocateXY::
 005C 0E940000          xcall push_gset3
 0060 622F              mov R22,R18
 0062 A02E              mov R10,R16
 0064                   .dbline -1
 0064                   .dbline 55
 0064           ;   }
 0064           ; }
 0064           ; //*******************显示光标定位子函数******************
 0064           ; void LocateXY(char posx,char posy)
 0064           ; {
 0064                   .dbline 57
 0064           ; uchar temp;
 0064           ;       temp&=0x7f;
 0064 4F77              andi R20,127
 0066                   .dbline 58
 0066           ;       temp=posx&0x0f;
 0066 4A2D              mov R20,R10
 0068 4F70              andi R20,15
 006A                   .dbline 59
 006A           ;       posy&=0x01;
 006A 6170              andi R22,1
 006C                   .dbline 60
 006C           ;       if(posy)temp|=0x40;
 006C 09F0              breq L12
 006E                   .dbline 60
 006E 4064              ori R20,64
 0070           L12:
 0070                   .dbline 61
 0070           ;       temp|=0x80;
 0070 4068              ori R20,128
 0072                   .dbline 62
 0072           ;       LcdWriteCommand(temp,0);
 0072 2227              clr R18
 0074 042F              mov R16,R20
 0076 31D0              xcall _LcdWriteCommand
 0078                   .dbline -2
 0078           L11:
 0078 0E940000          xcall pop_gset3
 007C                   .dbline 0 ; func end
 007C 0895              ret
 007E                   .dbsym r temp 20 c
 007E                   .dbsym r posy 22 c
 007E                   .dbsym r posx 10 c
 007E                   .dbend
 007E                   .dbfunc e DisplayOneChar _DisplayOneChar fV
 007E           ;          Wdata -> y+4
 007E           ;              y -> R22
 007E           ;              x -> R20
                        .even
 007E           _DisplayOneChar::
 007E 0E940000          xcall push_gset2
 0082 622F              mov R22,R18
 0084 402F              mov R20,R16
 0086                   .dbline -1
 0086                   .dbline 66
 0086           ; }
 0086           ; //*******************显示指定座标的一个字符子函数*******************
 0086           ; void DisplayOneChar(uchar x,uchar y,uchar Wdata)
 0086           ; {
 0086                   .dbline 67
 0086           ; LocateXY(x,y);
 0086 262F              mov R18,R22
 0088 042F              mov R16,R20
 008A E8DF              xcall _LocateXY
 008C                   .dbline 68
 008C           ; LcdWriteData(Wdata);
 008C 0C81              ldd R16,y+4
 008E 38D0              xcall _LcdWriteData
 0090                   .dbline -2
 0090           L14:
 0090 0E940000          xcall pop_gset2
 0094                   .dbline 0 ; func end
 0094 0895              ret
 0096                   .dbsym l Wdata 4 c
 0096                   .dbsym r y 22 c
 0096                   .dbsym r x 20 c
 0096                   .dbend
 0096                   .dbfunc e InitLcd _InitLcd fV
                        .even
 0096           _InitLcd::
 0096                   .dbline -1
 0096                   .dbline 72
 0096           ; }
 0096           ; //*******************LCD初始化子函数*********************
 0096           ; void InitLcd(void) 
 0096           ; {
 0096                   .dbline 73
 0096           ; LcdWriteCommand(0x38,0); 
 0096 2227              clr R18
 0098 08E3              ldi R16,56
 009A 1FD0              xcall _LcdWriteCommand
 009C                   .dbline 74
 009C           ; Delay_nms(5);
 009C 05E0              ldi R16,5
 009E 10E0              ldi R17,0
 00A0 5CD0              xcall _Delay_nms
 00A2                   .dbline 75
 00A2           ; LcdWriteCommand(0x38,0); 
 00A2 2227              clr R18
 00A4 08E3              ldi R16,56
 00A6 19D0              xcall _LcdWriteCommand
 00A8                   .dbline 76
 00A8           ; Delay_nms(5);
 00A8 05E0              ldi R16,5
 00AA 10E0              ldi R17,0
 00AC 56D0              xcall _Delay_nms
 00AE                   .dbline 77
 00AE           ; LcdWriteCommand(0x38,0); 
 00AE 2227              clr R18
 00B0 08E3              ldi R16,56
 00B2 13D0              xcall _LcdWriteCommand
 00B4                   .dbline 78
 00B4           ; Delay_nms(5);
 00B4 05E0              ldi R16,5
 00B6 10E0              ldi R17,0
 00B8 50D0              xcall _Delay_nms
 00BA                   .dbline 79
 00BA           ; LcdWriteCommand(0x38,1); 
 00BA 21E0              ldi R18,1
 00BC 08E3              ldi R16,56
 00BE 0DD0              xcall _LcdWriteCommand
 00C0                   .dbline 80
 00C0           ; LcdWriteCommand(0x08,1); 
 00C0 21E0              ldi R18,1
 00C2 08E0              ldi R16,8
 00C4 0AD0              xcall _LcdWriteCommand
 00C6                   .dbline 81
 00C6           ; LcdWriteCommand(0x01,1); 
 00C6 21E0              ldi R18,1
 00C8 01E0              ldi R16,1
 00CA 07D0              xcall _LcdWriteCommand
 00CC                   .dbline 82
 00CC           ; LcdWriteCommand(0x06,1);
 00CC 21E0              ldi R18,1
 00CE 06E0              ldi R16,6
 00D0 04D0              xcall _LcdWriteCommand
 00D2                   .dbline 83
 00D2           ; LcdWriteCommand(0x0c,1);
 00D2 21E0              ldi R18,1
 00D4 0CE0              ldi R16,12
 00D6 01D0              xcall _LcdWriteCommand
 00D8                   .dbline -2
 00D8           L15:
 00D8                   .dbline 0 ; func end
 00D8 0895              ret
 00DA                   .dbend
 00DA                   .dbfunc e LcdWriteCommand _LcdWriteCommand fV
 00DA           ;        Attribc -> R22
 00DA           ;            CMD -> R20
                        .even
 00DA           _LcdWriteCommand::
 00DA 0E940000          xcall push_gset2
 00DE 622F              mov R22,R18
 00E0 402F              mov R20,R16
 00E2                   .dbline -1
 00E2                   .dbline 87
 00E2           ; }
 00E2           ; //********************写命令到LCM子函数********************
 00E2           ; void LcdWriteCommand(uchar CMD,uchar Attribc)
 00E2           ; {
 00E2                   .dbline 88
 00E2           ; if(Attribc)WaitForEnable();
 00E2 6623              tst R22
 00E4 09F0              breq L17
 00E6                   .dbline 88
 00E6 1CD0              xcall _WaitForEnable
 00E8           L17:
 00E8                   .dbline 89
 00E8           ; LCM_RS_0;LCM_RW_0;_NOP();
 00E8 C098              cbi 0x18,0
 00EA                   .dbline 89
 00EA C198              cbi 0x18,1
 00EC                   .dbline 89
 00EC 0000              nop
 00EE                   .dbline 90
 00EE           ; DataPort=CMD;_NOP();
 00EE 4BBB              out 0x1b,R20
 00F0                   .dbline 90
 00F0 0000              nop
 00F2                   .dbline 91
 00F2           ; LCM_EN_1;_NOP();_NOP();LCM_EN_0;
 00F2 C29A              sbi 0x18,2
 00F4                   .dbline 91
 00F4 0000              nop
 00F6                   .dbline 91
 00F6 0000              nop
 00F8                   .dbline 91
 00F8 C298              cbi 0x18,2
 00FA                   .dbline -2
 00FA           L16:
 00FA 0E940000          xcall pop_gset2
 00FE                   .dbline 0 ; func end
 00FE 0895              ret
 0100                   .dbsym r Attribc 22 c
 0100                   .dbsym r CMD 20 c
 0100                   .dbend
 0100                   .dbfunc e LcdWriteData _LcdWriteData fV
 0100           ;          dataW -> R20
                        .even
 0100           _LcdWriteData::
 0100 0E940000          xcall push_gset1
 0104 402F              mov R20,R16
 0106                   .dbline -1
 0106                   .dbline 95
 0106           ; }
 0106           ; //*******************写数据到LCM子函数********************
 0106           ; void LcdWriteData(uchar dataW)
 0106           ; {
 0106                   .dbline 96
 0106           ; WaitForEnable();
 0106 0CD0              xcall _WaitForEnable
 0108                   .dbline 97
 0108           ; LCM_RS_1;LCM_RW_0;_NOP();
 0108 C09A              sbi 0x18,0
 010A                   .dbline 97
 010A C198              cbi 0x18,1
 010C                   .dbline 97
 010C 0000              nop
 010E                   .dbline 98
 010E           ; DataPort=dataW;_NOP();
 010E 4BBB              out 0x1b,R20
 0110                   .dbline 98
 0110 0000              nop
 0112                   .dbline 99
 0112           ; LCM_EN_1;_NOP();_NOP();LCM_EN_0;
 0112 C29A              sbi 0x18,2
 0114                   .dbline 99
 0114 0000              nop
 0116                   .dbline 99
 0116 0000              nop
 0118                   .dbline 99
 0118 C298              cbi 0x18,2
 011A                   .dbline -2
 011A           L19:
 011A 0E940000          xcall pop_gset1
 011E                   .dbline 0 ; func end
 011E 0895              ret
 0120                   .dbsym r dataW 20 c
 0120                   .dbend
 0120                   .dbfunc e WaitForEnable _WaitForEnable fV
 0120           ;            val -> R16
                        .even
 0120           _WaitForEnable::
 0120                   .dbline -1
 0120                   .dbline 103
 0120           ; }
 0120           ; //*******************检测LCD忙信号子函数*********************
 0120           ; void WaitForEnable(void)
 0120           ; {
 0120                   .dbline 105
 0120           ; uchar val;
 0120           ; DataPort=0xff;
 0120 8FEF              ldi R24,255
 0122 8BBB              out 0x1b,R24
 0124                   .dbline 106
 0124           ; LCM_RS_0;LCM_RW_1;_NOP();
 0124 C098              cbi 0x18,0
 0126                   .dbline 106
 0126 C19A              sbi 0x18,1
 0128                   .dbline 106
 0128 0000              nop
 012A                   .dbline 107
 012A           ; LCM_EN_1;_NOP();_NOP();
 012A C29A              sbi 0x18,2
 012C                   .dbline 107
 012C 0000              nop
 012E                   .dbline 107
 012E 0000              nop
 0130                   .dbline 108
 0130           ; DDRA=0x00;
 0130 2224              clr R2
 0132 2ABA              out 0x1a,R2
 0134                   .dbline 109
 0134           ; val=PINA;
 0134 09B3              in R16,0x19
 0136 01C0              xjmp L22
 0138           L21:
 0138                   .dbline 110
 0138 09B3              in R16,0x19
 013A           L22:
 013A                   .dbline 110
 013A           ; while(val&Busy)val=PINA;
 013A 07FD              sbrc R16,7
 013C FDCF              rjmp L21
 013E                   .dbline 111
 013E           ; LCM_EN_0;
 013E C298              cbi 0x18,2
 0140                   .dbline 112
 0140           ; DDRA=0xff;
 0140 8FEF              ldi R24,255
 0142 8ABB              out 0x1a,R24
 0144                   .dbline -2
 0144           L20:
 0144                   .dbline 0 ; func end
 0144 0895              ret
 0146                   .dbsym r val 16 c
 0146                   .dbend
 0146                   .dbfunc e Delay_1ms _Delay_1ms fV
 0146           ;              i -> R16,R17
                        .even
 0146           _Delay_1ms::
 0146                   .dbline -1
 0146                   .dbline 116
 0146           ; }
 0146           ; //****************************************
 0146           ; void Delay_1ms(void)          //1mS延时子函数
 0146           ; { uint i;
 0146                   .dbline 117
 0146           ;  for(i=1;i<(uint)(xtal*143-2);i++)
 0146 01E0              ldi R16,1
 0148 10E0              ldi R17,0
 014A 02C0              xjmp L28
 014C           L25:
 014C                   .dbline 118
 014C           L26:
 014C                   .dbline 117
 014C 0F5F              subi R16,255  ; offset = 1
 014E 1F4F              sbci R17,255
 0150           L28:
 0150                   .dbline 117
 0150 0637              cpi R16,118
 0152 E4E0              ldi R30,4
 0154 1E07              cpc R17,R30
 0156 D0F3              brlo L25
 0158                   .dbline -2
 0158           L24:
 0158                   .dbline 0 ; func end
 0158 0895              ret
 015A                   .dbsym r i 16 i
 015A                   .dbend
 015A                   .dbfunc e Delay_nms _Delay_nms fV
 015A           ;              i -> R20,R21
 015A           ;              n -> R22,R23
                        .even
 015A           _Delay_nms::
 015A 0E940000          xcall push_gset2
 015E B801              movw R22,R16
 0160                   .dbline -1
 0160                   .dbline 122
 0160           ;     ;
 0160           ; }
 0160           ; //====================================
 0160           ; void Delay_nms(uint n)                //n*1mS延时子函数
 0160           ; {
 0160                   .dbline 123
 0160           ;  uint i=0;
 0160 4427              clr R20
 0162 5527              clr R21
 0164 03C0              xjmp L31
 0166           L30:
 0166                   .dbline 125
 0166                   .dbline 125
 0166 EFDF              xcall _Delay_1ms
 0168                   .dbline 126
 0168 4F5F              subi R20,255  ; offset = 1
 016A 5F4F              sbci R21,255
 016C                   .dbline 127
 016C           L31:
 016C                   .dbline 124
 016C           ;    while(i<n)
 016C 4617              cp R20,R22
 016E 5707              cpc R21,R23
 0170 D0F3              brlo L30
 0172                   .dbline -2
 0172           L29:
 0172 0E940000          xcall pop_gset2
 0176                   .dbline 0 ; func end
 0176 0895              ret
 0178                   .dbsym r i 20 i
 0178                   .dbsym r n 22 i
 0178                   .dbend
 0178                   .dbfunc e port_init _port_init fV
                        .even
 0178           _port_init::
 0178                   .dbline -1
 0178                   .dbline 140
 0178           ;    {Delay_1ms();
 0178           ;     i++;
 0178           ;    }
 0178           ; }
 0178           ; /*******************定义结构体变量time1,time2*******************/
 0178           ; struct date
 0178           ; {
 0178           ; uchar hour;
 0178           ; uchar min;
 0178           ; uchar sec;
 0178           ; uchar dida;
 0178           ; }time1,time2;
 0178           ; 
 0178           ; /*******************端口初始化*******************/
 0178           ; void port_init(void)
 0178           ; {
 0178                   .dbline 141
 0178           ;  PORTA = 0x00;
 0178 2224              clr R2
 017A 2BBA              out 0x1b,R2
 017C                   .dbline 142
 017C           ;  DDRA  = 0xFF;
 017C 8FEF              ldi R24,255
 017E 8ABB              out 0x1a,R24
 0180                   .dbline 143
 0180           ;  PORTB = 0x00;
 0180 28BA              out 0x18,R2
 0182                   .dbline 144
 0182           ;  DDRB  = 0xFF;
 0182 87BB              out 0x17,R24
 0184                   .dbline 145
 0184           ;  PORTC = 0x00; 
 0184 25BA              out 0x15,R2
 0186                   .dbline 146
 0186           ;  DDRC  = 0x03;
 0186 83E0              ldi R24,3
 0188 84BB              out 0x14,R24
 018A                   .dbline 147
 018A           ;  PORTD = 0xFF;
 018A 8FEF              ldi R24,255
 018C 82BB              out 0x12,R24
 018E                   .dbline 148
 018E           ;  DDRD  = 0x00;
 018E 21BA              out 0x11,R2
 0190                   .dbline -2
 0190           L33:
 0190                   .dbline 0 ; func end
 0190 0895              ret
 0192                   .dbend
 0192                   .dbfunc e scan_key _scan_key fc
 0192           ;           temp -> R16
                        .even
 0192           _scan_key::
 0192                   .dbline -1
 0192                   .dbline 158
 0192           ; }
 0192           ; /*************************************/
 0192           ; char com_data;                
 0192           ; uchar cnt;                    
 0192           ; void delay_iic(int n);        
 0192           ; uchar rd_24c01(char a);       
 0192           ; void wr_24c01(char a,char b);
 0192           ; /******************扫描按键***************/
 0192           ; uchar scan_key(void)          
 0192           ; {                                     
 0192                   .dbline 160
 0192           ; uchar temp;                   
 0192           ; temp=PIND;                            
 0192 00B3              in R16,0x10
 0194                   .dbline 161
 0194           ; return temp;                  
 0194                   .dbline -2
 0194           L34:
 0194                   .dbline 0 ; func end
 0194 0895              ret
 0196                   .dbsym r temp 16 c
 0196                   .dbend
 0196                   .dbfunc e delay _delay fV
 0196           ;              i -> R20,R21
 0196           ;              j -> R22,R23
 0196           ;              k -> R16,R17
                        .even
 0196           _delay::
 0196 0E940000          xcall push_gset2
 019A                   .dbline -1
 019A                   .dbline 165
 019A           ; }                                     
 019A           ; /***************延时子函数******************/
 019A           ; void delay(uint k)            
 019A           ; {                                     
 019A                   .dbline 167
 019A           ; uint i,j;                     
 019A           ; for(i=0;i<k;i++)                      
 019A 4427              clr R20
 019C 5527              clr R21
 019E 0BC0              xjmp L39
 01A0           L36:
 01A0                   .dbline 168
 01A0           ; {for(j=0;j<121;j++)           
 01A0                   .dbline 168
 01A0 6627              clr R22
 01A2 7727              clr R23
 01A4 02C0              xjmp L43
 01A6           L40:
 01A6                   .dbline 169
 01A6                   .dbline 169
 01A6                   .dbline 169
 01A6           L41:
 01A6                   .dbline 168
 01A6 6F5F              subi R22,255  ; offset = 1
 01A8 7F4F              sbci R23,255
 01AA           L43:
 01AA                   .dbline 168
 01AA 6937              cpi R22,121
 01AC E0E0              ldi R30,0
 01AE 7E07              cpc R23,R30
 01B0 D0F3              brlo L40
 01B2                   .dbline 169
 01B2           L37:
 01B2                   .dbline 167
 01B2 4F5F              subi R20,255  ; offset = 1
 01B4 5F4F              sbci R21,255
 01B6           L39:
 01B6                   .dbline 167
 01B6 4017              cp R20,R16
 01B8 5107              cpc R21,R17
 01BA 90F3              brlo L36
 01BC                   .dbline -2
 01BC           L35:
 01BC 0E940000          xcall pop_gset2
 01C0                   .dbline 0 ; func end
 01C0 0895              ret
 01C2                   .dbsym r i 20 i
 01C2                   .dbsym r j 22 i
 01C2                   .dbsym r k 16 i
 01C2                   .dbend
 01C2                   .dbfunc e start _start fV
                        .even
 01C2           _start::
 01C2                   .dbline -1
 01C2                   .dbline 174
 01C2           ; {;}}                          
 01C2           ; }                                     
 01C2           ; 
 01C2           ; /*****************启动读写时序子函数******************/
 01C2           ; void start(void)                      
 01C2           ; {DDRC=0x03;                                   
 01C2                   .dbline 174
 01C2 83E0              ldi R24,3
 01C4 84BB              out 0x14,R24
 01C6                   .dbline 175
 01C6           ; SDA_1;Some_NOP();
 01C6 A99A              sbi 0x15,1
 01C8                   .dbline 175
 01C8                   .dbline 175
 01C8 0000              nop
 01CA                   .dbline 175
 01CA 0000              nop
 01CC                   .dbline 175
 01CC 0000              nop
 01CE                   .dbline 175
 01CE 0000              nop
 01D0                   .dbline 175
 01D0 0000              nop
 01D2                   .dbline 175
 01D2 0000              nop
 01D4                   .dbline 175
 01D4 0000              nop
 01D6                   .dbline 175
 01D6 0000              nop
 01D8                   .dbline 175
 01D8                   .dbline 176
 01D8           ; SCL_1;Some_NOP();
 01D8 A89A              sbi 0x15,0
 01DA                   .dbline 176
 01DA                   .dbline 176
 01DA 0000              nop
 01DC                   .dbline 176
 01DC 0000              nop
 01DE                   .dbline 176
 01DE 0000              nop
 01E0                   .dbline 176
 01E0 0000              nop
 01E2                   .dbline 176
 01E2 0000              nop
 01E4                   .dbline 176
 01E4 0000              nop
 01E6                   .dbline 176
 01E6 0000              nop
 01E8                   .dbline 176
 01E8 0000              nop
 01EA                   .dbline 176
 01EA                   .dbline 177
 01EA           ; SDA_0;Some_NOP();
 01EA A998              cbi 0x15,1
 01EC                   .dbline 177
 01EC                   .dbline 177
 01EC 0000              nop
 01EE                   .dbline 177
 01EE 0000              nop
 01F0                   .dbline 177
 01F0 0000              nop
 01F2                   .dbline 177
 01F2 0000              nop
 01F4                   .dbline 177
 01F4 0000              nop
 01F6                   .dbline 177
 01F6 0000              nop
 01F8                   .dbline 177
 01F8 0000              nop
 01FA                   .dbline 177
 01FA 0000              nop
 01FC                   .dbline 177
 01FC                   .dbline 178
 01FC           ; SCL_0;Some_NOP();
 01FC A898              cbi 0x15,0
 01FE                   .dbline 178
 01FE                   .dbline 178
 01FE 0000              nop
 0200                   .dbline 178
 0200 0000              nop
 0202                   .dbline 178
 0202 0000              nop
 0204                   .dbline 178
 0204 0000              nop
 0206                   .dbline 178
 0206 0000              nop
 0208                   .dbline 178
 0208 0000              nop
 020A                   .dbline 178
 020A 0000              nop
 020C                   .dbline 178
 020C 0000              nop
 020E                   .dbline 178
 020E                   .dbline -2
 020E           L44:
 020E                   .dbline 0 ; func end
 020E 0895              ret
 0210                   .dbend
 0210                   .dbfunc e stop _stop fV
                        .even
 0210           _stop::
 0210                   .dbline -1
 0210                   .dbline 182
 0210           ; }                                     
 0210           ; //********************停止操作子函数*********************
 0210           ; void stop(void)                       
 0210           ; {     DDRC=0x03;                      
 0210                   .dbline 182
 0210 83E0              ldi R24,3
 0212 84BB              out 0x14,R24
 0214                   .dbline 183
 0214           ; SDA_0;Some_NOP();
 0214 A998              cbi 0x15,1
 0216                   .dbline 183
 0216                   .dbline 183
 0216 0000              nop
 0218                   .dbline 183
 0218 0000              nop
 021A                   .dbline 183
 021A 0000              nop
 021C                   .dbline 183
 021C 0000              nop
 021E                   .dbline 183
 021E 0000              nop
 0220                   .dbline 183
 0220 0000              nop
 0222                   .dbline 183
 0222 0000              nop
 0224                   .dbline 183
 0224 0000              nop
 0226                   .dbline 183
 0226                   .dbline 184
 0226           ; SCL_1;Some_NOP();
 0226 A89A              sbi 0x15,0
 0228                   .dbline 184
 0228                   .dbline 184
 0228 0000              nop
 022A                   .dbline 184
 022A 0000              nop
 022C                   .dbline 184
 022C 0000              nop
 022E                   .dbline 184
 022E 0000              nop
 0230                   .dbline 184
 0230 0000              nop
 0232                   .dbline 184
 0232 0000              nop
 0234                   .dbline 184
 0234 0000              nop
 0236                   .dbline 184
 0236 0000              nop
 0238                   .dbline 184
 0238                   .dbline 185
 0238           ; SDA_1;Some_NOP();
 0238 A99A              sbi 0x15,1
 023A                   .dbline 185
 023A                   .dbline 185
 023A 0000              nop
 023C                   .dbline 185
 023C 0000              nop
 023E                   .dbline 185
 023E 0000              nop
 0240                   .dbline 185
 0240 0000              nop
 0242                   .dbline 185
 0242 0000              nop
 0244                   .dbline 185
 0244 0000              nop
 0246                   .dbline 185
 0246 0000              nop
 0248                   .dbline 185
 0248 0000              nop
 024A                   .dbline 185
 024A                   .dbline -2
 024A           L45:
 024A                   .dbline 0 ; func end
 024A 0895              ret
 024C                   .dbend
 024C                   .dbfunc e ack _ack fV
                        .even
 024C           _ack::
 024C                   .dbline -1
 024C                   .dbline 189
 024C           ; }                             
 024C           ; //************应答子函数*************
 024C           ; void ack(void)                        
 024C           ; {     DDRC=0x03;                              
 024C                   .dbline 189
 024C 83E0              ldi R24,3
 024E 84BB              out 0x14,R24
 0250                   .dbline 190
 0250           ; SCL_1;Some_NOP();
 0250 A89A              sbi 0x15,0
 0252                   .dbline 190
 0252                   .dbline 190
 0252 0000              nop
 0254                   .dbline 190
 0254 0000              nop
 0256                   .dbline 190
 0256 0000              nop
 0258                   .dbline 190
 0258 0000              nop
 025A                   .dbline 190
 025A 0000              nop
 025C                   .dbline 190
 025C 0000              nop
 025E                   .dbline 190
 025E 0000              nop
 0260                   .dbline 190
 0260 0000              nop
 0262                   .dbline 190
 0262                   .dbline 191
 0262           ; SCL_0;Some_NOP();
 0262 A898              cbi 0x15,0
 0264                   .dbline 191
 0264                   .dbline 191
 0264 0000              nop
 0266                   .dbline 191
 0266 0000              nop
 0268                   .dbline 191
 0268 0000              nop
 026A                   .dbline 191
 026A 0000              nop
 026C                   .dbline 191
 026C 0000              nop
 026E                   .dbline 191
 026E 0000              nop
 0270                   .dbline 191
 0270 0000              nop
 0272                   .dbline 191
 0272 0000              nop
 0274                   .dbline 191
 0274                   .dbline -2
 0274           L46:
 0274                   .dbline 0 ; func end
 0274 0895              ret
 0276                   .dbend
 0276                   .dbfunc e shift8 _shift8 fV
 0276           ;              j -> R20
 0276           ;              i -> R22
 0276           ;              a -> R16
                        .even
 0276           _shift8::
 0276 0E940000          xcall push_gset2
 027A                   .dbline -1
 027A                   .dbline 195
 027A           ; }                                     
 027A           ; //*************写入8位子函数*************
 027A           ; void shift8(char a)           
 027A           ; {                                     
 027A                   .dbline 197
 027A           ; uchar i,j;                    
 027A           ; DDRC=0x03;
 027A 83E0              ldi R24,3
 027C 84BB              out 0x14,R24
 027E                   .dbline 198
 027E           ; com_data=a;                   
 027E 00930100          sts _com_data,R16
 0282                   .dbline 199
 0282           ; for(i=0;i<8;i++)      
 0282 6627              clr R22
 0284 1FC0              xjmp L51
 0286           L48:
 0286                   .dbline 200
 0286           ; {     
 0286                   .dbline 201
 0286           ; j=com_data&0x80;
 0286 40910100          lds R20,_com_data
 028A 4078              andi R20,128
 028C                   .dbline 202
 028C           ; if(j==0)SDA_0;
 028C 11F4              brne L52
 028E                   .dbline 202
 028E A998              cbi 0x15,1
 0290 01C0              xjmp L53
 0292           L52:
 0292                   .dbline 203
 0292           ; else SDA_1;
 0292 A99A              sbi 0x15,1
 0294           L53:
 0294                   .dbline 205
 0294 A89A              sbi 0x15,0
 0296                   .dbline 205
 0296                   .dbline 205
 0296 0000              nop
 0298                   .dbline 205
 0298 0000              nop
 029A                   .dbline 205
 029A 0000              nop
 029C                   .dbline 205
 029C 0000              nop
 029E                   .dbline 205
 029E 0000              nop
 02A0                   .dbline 205
 02A0 0000              nop
 02A2                   .dbline 205
 02A2 0000              nop
 02A4                   .dbline 205
 02A4 0000              nop
 02A6                   .dbline 205
 02A6                   .dbline 206
 02A6 A898              cbi 0x15,0
 02A8                   .dbline 206
 02A8                   .dbline 206
 02A8 0000              nop
 02AA                   .dbline 206
 02AA 0000              nop
 02AC                   .dbline 206
 02AC 0000              nop
 02AE                   .dbline 206
 02AE 0000              nop
 02B0                   .dbline 206
 02B0 0000              nop
 02B2                   .dbline 206
 02B2 0000              nop
 02B4                   .dbline 206
 02B4 0000              nop
 02B6                   .dbline 206
 02B6 0000              nop
 02B8                   .dbline 206
 02B8                   .dbline 207
 02B8 20900100          lds R2,_com_data
 02BC 220C              lsl R2
 02BE 20920100          sts _com_data,R2
 02C2                   .dbline 208
 02C2           L49:
 02C2                   .dbline 199
 02C2 6395              inc R22
 02C4           L51:
 02C4                   .dbline 199
 02C4 6830              cpi R22,8
 02C6 F8F2              brlo L48
 02C8                   .dbline -2
 02C8           L47:
 02C8 0E940000          xcall pop_gset2
 02CC                   .dbline 0 ; func end
 02CC 0895              ret
 02CE                   .dbsym r j 20 c
 02CE                   .dbsym r i 22 c
 02CE                   .dbsym r a 16 c
 02CE                   .dbend
 02CE                   .dbfunc e rd_24c01 _rd_24c01 fc
 02CE           ;        command -> R20
 02CE           ;              i -> R20
 02CE           ;              a -> R22
                        .even
 02CE           _rd_24c01::
 02CE 0E940000          xcall push_gset2
 02D2 602F              mov R22,R16
 02D4                   .dbline -1
 02D4                   .dbline 212
 02D4           ; 
 02D4           ; SCL_1;Some_NOP();
 02D4           ; SCL_0;Some_NOP();
 02D4           ; com_data=com_data<<1;         
 02D4           ; }                                     
 02D4           ; }                                     
 02D4           ; //**************读24C01A中a地址单元的数据************
 02D4           ; uchar rd_24c01(char a)                
 02D4           ; {                                     
 02D4                   .dbline 214
 02D4           ; uchar i,command;              
 02D4           ; DDRC=0x03;
 02D4 83E0              ldi R24,3
 02D6 84BB              out 0x14,R24
 02D8                   .dbline 215
 02D8           ; SDA_1;Some_NOP();
 02D8 A99A              sbi 0x15,1
 02DA                   .dbline 215
 02DA                   .dbline 215
 02DA 0000              nop
 02DC                   .dbline 215
 02DC 0000              nop
 02DE                   .dbline 215
 02DE 0000              nop
 02E0                   .dbline 215
 02E0 0000              nop
 02E2                   .dbline 215
 02E2 0000              nop
 02E4                   .dbline 215
 02E4 0000              nop
 02E6                   .dbline 215
 02E6 0000              nop
 02E8                   .dbline 215
 02E8 0000              nop
 02EA                   .dbline 215
 02EA                   .dbline 216
 02EA           ; SCL_0;Some_NOP();
 02EA A898              cbi 0x15,0
 02EC                   .dbline 216
 02EC                   .dbline 216
 02EC 0000              nop
 02EE                   .dbline 216
 02EE 0000              nop
 02F0                   .dbline 216
 02F0 0000              nop
 02F2                   .dbline 216
 02F2 0000              nop
 02F4                   .dbline 216
 02F4 0000              nop
 02F6                   .dbline 216
 02F6 0000              nop
 02F8                   .dbline 216
 02F8 0000              nop
 02FA                   .dbline 216
 02FA 0000              nop
 02FC                   .dbline 216
 02FC                   .dbline 217
 02FC           ; start();                              
 02FC 62DF              xcall _start
 02FE                   .dbline 218
 02FE           ; command=160;                  
 02FE 40EA              ldi R20,160
 0300                   .dbline 219
 0300           ; shift8(command);              
 0300 042F              mov R16,R20
 0302 B9DF              xcall _shift8
 0304                   .dbline 220
 0304           ; ack();                                
 0304 A3DF              xcall _ack
 0306                   .dbline 221
 0306           ; shift8(a);                    
 0306 062F              mov R16,R22
 0308 B6DF              xcall _shift8
 030A                   .dbline 222
 030A           ; ack();                                
 030A A0DF              xcall _ack
 030C                   .dbline 223
 030C           ; start();                              
 030C 5ADF              xcall _start
 030E                   .dbline 224
 030E           ; command=161;                  
 030E 41EA              ldi R20,161
 0310                   .dbline 225
 0310           ; shift8(command);              
 0310 042F              mov R16,R20
 0312 B1DF              xcall _shift8
 0314                   .dbline 226
 0314           ; ack();                                
 0314 9BDF              xcall _ack
 0316                   .dbline 228
 0316           ; 
 0316           ; SDA_1;Some_NOP();     
 0316 A99A              sbi 0x15,1
 0318                   .dbline 228
 0318                   .dbline 228
 0318 0000              nop
 031A                   .dbline 228
 031A 0000              nop
 031C                   .dbline 228
 031C 0000              nop
 031E                   .dbline 228
 031E 0000              nop
 0320                   .dbline 228
 0320 0000              nop
 0322                   .dbline 228
 0322 0000              nop
 0324                   .dbline 228
 0324 0000              nop
 0326                   .dbline 228
 0326 0000              nop
 0328                   .dbline 228
 0328                   .dbline 229
 0328           ; for(i=0;i<8;i++)                      
 0328 4427              clr R20
 032A 26C0              xjmp L58
 032C           L55:
 032C                   .dbline 230
 032C           ; {
 032C                   .dbline 231
 032C           ; DDRC=0x01;                            
 032C 81E0              ldi R24,1
 032E 84BB              out 0x14,R24
 0330                   .dbline 232
 0330           ; com_data=com_data<<1;         
 0330 20900100          lds R2,_com_data
 0334 220C              lsl R2
 0336 20920100          sts _com_data,R2
 033A                   .dbline 233
 033A           ; SCL_1;Some_NOP();     
 033A A89A              sbi 0x15,0
 033C                   .dbline 233
 033C                   .dbline 233
 033C 0000              nop
 033E                   .dbline 233
 033E 0000              nop
 0340                   .dbline 233
 0340 0000              nop
 0342                   .dbline 233
 0342 0000              nop
 0344                   .dbline 233
 0344 0000              nop
 0346                   .dbline 233
 0346 0000              nop
 0348                   .dbline 233
 0348 0000              nop
 034A                   .dbline 233
 034A 0000              nop
 034C                   .dbline 233
 034C                   .dbline 234
 034C           ; if(PIN_SDA==0)com_data&=0xfe;
 034C 9999              sbic 0x13,1
 034E 05C0              rjmp L59
 0350                   .dbline 234
 0350 822D              mov R24,R2
 0352 8E7F              andi R24,254
 0354 80930100          sts _com_data,R24
 0358 05C0              xjmp L60
 035A           L59:
 035A                   .dbline 235
 035A           ; else com_data|=0x01;
 035A 80910100          lds R24,_com_data
 035E 8160              ori R24,1
 0360 80930100          sts _com_data,R24
 0364           L60:
 0364                   .dbline 236
 0364 A898              cbi 0x15,0
 0366                   .dbline 236
 0366                   .dbline 236
 0366 0000              nop
 0368                   .dbline 236
 0368 0000              nop
 036A                   .dbline 236
 036A 0000              nop
 036C                   .dbline 236
 036C 0000              nop
 036E                   .dbline 236
 036E 0000              nop
 0370                   .dbline 236
 0370 0000              nop
 0372                   .dbline 236
 0372 0000              nop
 0374                   .dbline 236
 0374 0000              nop
 0376                   .dbline 236
 0376                   .dbline 237
 0376           L56:
 0376                   .dbline 229
 0376 4395              inc R20
 0378           L58:
 0378                   .dbline 229
 0378 4830              cpi R20,8
 037A C0F2              brlo L55
 037C                   .dbline 238
 037C           ; SCL_0;Some_NOP();
 037C           ; }                                     
 037C           ; stop();                               
 037C 49DF              xcall _stop
 037E                   .dbline 239
 037E           ; return(com_data);     
 037E 00910100          lds R16,_com_data
 0382                   .dbline -2
 0382           L54:
 0382 0E940000          xcall pop_gset2
 0386                   .dbline 0 ; func end
 0386 0895              ret
 0388                   .dbsym r command 20 c
 0388                   .dbsym r i 20 c
 0388                   .dbsym r a 22 c
 0388                   .dbend
 0388                   .dbfunc e wr_24c01 _wr_24c01 fV
 0388           ;        command -> R10
 0388           ;              b -> R20
 0388           ;              a -> R22
                        .even
 0388           _wr_24c01::
 0388 0E940000          xcall push_gset3
 038C 422F              mov R20,R18
 038E 602F              mov R22,R16
 0390                   .dbline -1
 0390                   .dbline 243
 0390           ; }                                     
 0390           ; //********将RAM中b地址单元的数据写入24C01A中a地址单元中***********
 0390           ; void wr_24c01(char a,char b)  
 0390           ; {                                     
 0390                   .dbline 245
 0390           ; uchar command;                
 0390           ; DDRC=0x03;
 0390 83E0              ldi R24,3
 0392 84BB              out 0x14,R24
 0394                   .dbline 246
 0394           ; SDA_1;Some_NOP();
 0394 A99A              sbi 0x15,1
 0396                   .dbline 246
 0396                   .dbline 246
 0396 0000              nop
 0398                   .dbline 246
 0398 0000              nop
 039A                   .dbline 246
 039A 0000              nop
 039C                   .dbline 246
 039C 0000              nop
 039E                   .dbline 246
 039E 0000              nop
 03A0                   .dbline 246
 03A0 0000              nop
 03A2                   .dbline 246
 03A2 0000              nop
 03A4                   .dbline 246
 03A4 0000              nop
 03A6                   .dbline 246
 03A6                   .dbline 247
 03A6           ; SCL_0;Some_NOP();
 03A6 A898              cbi 0x15,0
 03A8                   .dbline 247
 03A8                   .dbline 247
 03A8 0000              nop
 03AA                   .dbline 247
 03AA 0000              nop
 03AC                   .dbline 247
 03AC 0000              nop
 03AE                   .dbline 247
 03AE 0000              nop
 03B0                   .dbline 247
 03B0 0000              nop
 03B2                   .dbline 247
 03B2 0000              nop
 03B4                   .dbline 247
 03B4 0000              nop
 03B6                   .dbline 247
 03B6 0000              nop
 03B8                   .dbline 247
 03B8                   .dbline 248
 03B8           ; start();                              
 03B8 04DF              xcall _start
 03BA                   .dbline 249
 03BA           ; command=160;                  
 03BA 80EA              ldi R24,160
 03BC A82E              mov R10,R24
 03BE                   .dbline 250
 03BE           ; shift8(command);              
 03BE 082F              mov R16,R24
 03C0 5ADF              xcall _shift8
 03C2                   .dbline 251
 03C2           ; ack();                                
 03C2 44DF              xcall _ack
 03C4                   .dbline 252
 03C4           ; shift8(a);                            
 03C4 062F              mov R16,R22
 03C6 57DF              xcall _shift8
 03C8                   .dbline 253
 03C8           ; ack();                                
 03C8 41DF              xcall _ack
 03CA                   .dbline 254
 03CA           ; shift8(b);                            
 03CA 042F              mov R16,R20
 03CC 54DF              xcall _shift8
 03CE                   .dbline 255
 03CE           ; ack();                                
 03CE 3EDF              xcall _ack
 03D0                   .dbline 256
 03D0           ; stop();                               
 03D0 1FDF              xcall _stop
 03D2                   .dbline 257
 03D2           ; Some_NOP();
 03D2                   .dbline 257
 03D2 0000              nop
 03D4                   .dbline 257
 03D4 0000              nop
 03D6                   .dbline 257
 03D6 0000              nop
 03D8                   .dbline 257
 03D8 0000              nop
 03DA                   .dbline 257
 03DA 0000              nop
 03DC                   .dbline 257
 03DC 0000              nop
 03DE                   .dbline 257
 03DE 0000              nop
 03E0                   .dbline 257
 03E0 0000              nop
 03E2                   .dbline 257
 03E2                   .dbline -2
 03E2           L61:
 03E2 0E940000          xcall pop_gset3
 03E6                   .dbline 0 ; func end
 03E6 0895              ret
 03E8                   .dbsym r command 10 c
 03E8                   .dbsym r b 20 c
 03E8                   .dbsym r a 22 c
 03E8                   .dbend
 03E8                   .dbfunc e delay_iic _delay_iic fV
 03E8           ;              i -> R20,R21
 03E8           ;              n -> R16,R17
                        .even
 03E8           _delay_iic::
 03E8 0E940000          xcall push_gset1
 03EC                   .dbline -1
 03EC                   .dbline 261
 03EC           ; }                                     
 03EC           ; //**************延时子函数***********
 03EC           ; void delay_iic(int n)         
 03EC           ; {                                     
 03EC                   .dbline 263
 03EC 41E0              ldi R20,1
 03EE 50E0              ldi R21,0
 03F0 02C0              xjmp L66
 03F2           L63:
 03F2                   .dbline 263
 03F2                   .dbline 263
 03F2                   .dbline 263
 03F2           L64:
 03F2                   .dbline 263
 03F2 4F5F              subi R20,255  ; offset = 1
 03F4 5F4F              sbci R21,255
 03F6           L66:
 03F6                   .dbline 263
 03F6           ; int i;                                
 03F6           ; for(i=1;i<n;i++){;}           
 03F6 4017              cp R20,R16
 03F8 5107              cpc R21,R17
 03FA DCF3              brlt L63
 03FC                   .dbline -2
 03FC           L62:
 03FC 0E940000          xcall pop_gset1
 0400                   .dbline 0 ; func end
 0400 0895              ret
 0402                   .dbsym r i 20 I
 0402                   .dbsym r n 16 I
 0402                   .dbend
 0402                   .dbfunc e timer1_init _timer1_init fV
                        .even
 0402           _timer1_init::
 0402                   .dbline -1
 0402                   .dbline 268
 0402           ; }                                     
 0402           ; 
 0402           ; /**************定时器1初始化****************/
 0402           ; void timer1_init(void)
 0402           ; {
 0402                   .dbline 269
 0402           ;  TCNT1H = 0xF3; //setup
 0402 83EF              ldi R24,243
 0404 8DBD              out 0x2d,R24
 0406                   .dbline 270
 0406           ;  TCNT1L = 0xCB;
 0406 8BEC              ldi R24,203
 0408 8CBD              out 0x2c,R24
 040A                   .dbline 271
 040A           ;  TCCR1B = 0x04; //start Timer
 040A 84E0              ldi R24,4
 040C 8EBD              out 0x2e,R24
 040E                   .dbline -2
 040E           L67:
 040E                   .dbline 0 ; func end
 040E 0895              ret
 0410                   .dbend
 0410                   .dbfunc e main _main fV
 0410           ;        key_val -> R22
                        .even
 0410           _main::
 0410 2297              sbiw R28,2
 0412                   .dbline -1
 0412                   .dbline 275
 0412           ; }
 0412           ; //******************************************
 0412           ; void main(void)                               
 0412           ; {
 0412                   .dbline 277
 0412           ;        uchar key_val; 
 0412           ;        init_devices();
 0412 B3D1              xcall _init_devices
 0414                   .dbline 278
 0414           ;     Delay_nms(400);                   
 0414 00E9              ldi R16,400
 0416 11E0              ldi R17,1
 0418 A0DE              xcall _Delay_nms
 041A                   .dbline 279
 041A           ;       InitLcd();                      
 041A 3DDE              xcall _InitLcd
 041C                   .dbline 280
 041C           ;       LcdWriteCommand(0x01,1); 
 041C 21E0              ldi R18,1
 041E 01E0              ldi R16,1
 0420 5CDE              xcall _LcdWriteCommand
 0422                   .dbline 281
 0422           ;       LcdWriteCommand(0x0c,1); 
 0422 21E0              ldi R18,1
 0424 0CE0              ldi R16,12
 0426 59DE              xcall _LcdWriteCommand
 0428                   .dbline 282
 0428           ;       ePutstr(0,0,str0);  
 0428 80E0              ldi R24,<_str0
 042A 90E0              ldi R25,>_str0
 042C 9983              std y+1,R25
 042E 8883              std y+0,R24
 0430 2227              clr R18
 0432 0027              clr R16
 0434 E5DD              xcall _ePutstr
 0436                   .dbline 283
 0436           ;       Delay_nms(10);
 0436 0AE0              ldi R16,10
 0438 10E0              ldi R17,0
 043A 8FDE              xcall _Delay_nms
 043C                   .dbline 284
 043C           ;       ePutstr(0,1,str1);   
 043C 80E0              ldi R24,<_str1
 043E 90E0              ldi R25,>_str1
 0440 9983              std y+1,R25
 0442 8883              std y+0,R24
 0444 21E0              ldi R18,1
 0446 0027              clr R16
 0448 DBDD              xcall _ePutstr
 044A                   .dbline 285
 044A           ;       Delay_nms(10);
 044A 0AE0              ldi R16,10
 044C 10E0              ldi R17,0
 044E 85DE              xcall _Delay_nms
 0450 42C1              xjmp L70
 0452           L69:
 0452                   .dbline 288
 0452           ;       /********************************************/
 0452           ;               while(1)              
 0452           ;               {
 0452                   .dbline 289
 0452           ;                  DisplayOneChar(6,0,(time1.hour/10)+0x30);
 0452 1AE0              ldi R17,10
 0454 00910600          lds R16,_time1
 0458 0E940000          xcall div8u
 045C 802F              mov R24,R16
 045E 805D              subi R24,208    ; addi 48
 0460 8883              std y+0,R24
 0462 2227              clr R18
 0464 06E0              ldi R16,6
 0466 0BDE              xcall _DisplayOneChar
 0468                   .dbline 290
 0468           ;                  Delay_nms(10);
 0468 0AE0              ldi R16,10
 046A 10E0              ldi R17,0
 046C 76DE              xcall _Delay_nms
 046E                   .dbline 291
 046E           ;                  DisplayOneChar(7,0,(time1.hour%10)+0x30);
 046E 1AE0              ldi R17,10
 0470 00910600          lds R16,_time1
 0474 0E940000          xcall mod8u
 0478 802F              mov R24,R16
 047A 805D              subi R24,208    ; addi 48
 047C 8883              std y+0,R24
 047E 2227              clr R18
 0480 07E0              ldi R16,7
 0482 FDDD              xcall _DisplayOneChar
 0484                   .dbline 292
 0484           ;                  Delay_nms(10); 
 0484 0AE0              ldi R16,10
 0486 10E0              ldi R17,0
 0488 68DE              xcall _Delay_nms
 048A                   .dbline 293
 048A           ;                  DisplayOneChar(9,0,(time1.min/10)+0x30);
 048A 1AE0              ldi R17,10
 048C 00910700          lds R16,_time1+1
 0490 0E940000          xcall div8u
 0494 802F              mov R24,R16
 0496 805D              subi R24,208    ; addi 48
 0498 8883              std y+0,R24
 049A 2227              clr R18
 049C 09E0              ldi R16,9
 049E EFDD              xcall _DisplayOneChar
 04A0                   .dbline 294
 04A0           ;                  Delay_nms(10); 
 04A0 0AE0              ldi R16,10
 04A2 10E0              ldi R17,0
 04A4 5ADE              xcall _Delay_nms
 04A6                   .dbline 295
 04A6           ;                  DisplayOneChar(10,0,(time1.min%10)+0x30);
 04A6 1AE0              ldi R17,10
 04A8 00910700          lds R16,_time1+1
 04AC 0E940000          xcall mod8u
 04B0 802F              mov R24,R16
 04B2 805D              subi R24,208    ; addi 48
 04B4 8883              std y+0,R24
 04B6 2227              clr R18
 04B8 0AE0              ldi R16,10
 04BA E1DD              xcall _DisplayOneChar
 04BC                   .dbline 296
 04BC           ;                  Delay_nms(10); 
 04BC 0AE0              ldi R16,10
 04BE 10E0              ldi R17,0
 04C0 4CDE              xcall _Delay_nms
 04C2                   .dbline 297
 04C2           ;                  DisplayOneChar(12,0,(time1.sec/10)+0x30);
 04C2 1AE0              ldi R17,10
 04C4 00910800          lds R16,_time1+2
 04C8 0E940000          xcall div8u
 04CC 802F              mov R24,R16
 04CE 805D              subi R24,208    ; addi 48
 04D0 8883              std y+0,R24
 04D2 2227              clr R18
 04D4 0CE0              ldi R16,12
 04D6 D3DD              xcall _DisplayOneChar
 04D8                   .dbline 298
 04D8           ;                  Delay_nms(10); 
 04D8 0AE0              ldi R16,10
 04DA 10E0              ldi R17,0
 04DC 3EDE              xcall _Delay_nms
 04DE                   .dbline 299
 04DE           ;                  DisplayOneChar(13,0,(time1.sec%10)+0x30);
 04DE 1AE0              ldi R17,10
 04E0 00910800          lds R16,_time1+2
 04E4 0E940000          xcall mod8u
 04E8 802F              mov R24,R16
 04EA 805D              subi R24,208    ; addi 48
 04EC 8883              std y+0,R24
 04EE 2227              clr R18
 04F0 0DE0              ldi R16,13
 04F2 C5DD              xcall _DisplayOneChar
 04F4                   .dbline 300
 04F4           ;                  Delay_nms(10); 
 04F4 0AE0              ldi R16,10
 04F6 10E0              ldi R17,0
 04F8 30DE              xcall _Delay_nms
 04FA                   .dbline 302
 04FA           ;                  
 04FA           ;                  DisplayOneChar(7,1,(time2.hour/10)+0x30);
 04FA 1AE0              ldi R17,10
 04FC 00910200          lds R16,_time2
 0500 0E940000          xcall div8u
 0504 802F              mov R24,R16
 0506 805D              subi R24,208    ; addi 48
 0508 8883              std y+0,R24
 050A 21E0              ldi R18,1
 050C 07E0              ldi R16,7
 050E B7DD              xcall _DisplayOneChar
 0510                   .dbline 303
 0510           ;                  Delay_nms(10); 
 0510 0AE0              ldi R16,10
 0512 10E0              ldi R17,0
 0514 22DE              xcall _Delay_nms
 0516                   .dbline 304
 0516           ;                  DisplayOneChar(8,1,(time2.hour%10)+0x30);
 0516 1AE0              ldi R17,10
 0518 00910200          lds R16,_time2
 051C 0E940000          xcall mod8u
 0520 802F              mov R24,R16
 0522 805D              subi R24,208    ; addi 48
 0524 8883              std y+0,R24
 0526 21E0              ldi R18,1
 0528 08E0              ldi R16,8
 052A A9DD              xcall _DisplayOneChar
 052C                   .dbline 305
 052C           ;                  Delay_nms(10); 
 052C 0AE0              ldi R16,10
 052E 10E0              ldi R17,0
 0530 14DE              xcall _Delay_nms
 0532                   .dbline 306
 0532           ;                  DisplayOneChar(10,1,(time2.min/10)+0x30);
 0532 1AE0              ldi R17,10
 0534 00910300          lds R16,_time2+1
 0538 0E940000          xcall div8u
 053C 802F              mov R24,R16
 053E 805D              subi R24,208    ; addi 48
 0540 8883              std y+0,R24
 0542 21E0              ldi R18,1
 0544 0AE0              ldi R16,10
 0546 9BDD              xcall _DisplayOneChar
 0548                   .dbline 307
 0548           ;                  Delay_nms(10); 
 0548 0AE0              ldi R16,10
 054A 10E0              ldi R17,0
 054C 06DE              xcall _Delay_nms
 054E                   .dbline 308
 054E           ;          DisplayOneChar(11,1,(time2.min%10)+0x30);
 054E 1AE0              ldi R17,10
 0550 00910300          lds R16,_time2+1
 0554 0E940000          xcall mod8u
 0558 802F              mov R24,R16
 055A 805D              subi R24,208    ; addi 48
 055C 8883              std y+0,R24
 055E 21E0              ldi R18,1
 0560 0BE0              ldi R16,11
 0562 8DDD              xcall _DisplayOneChar
 0564                   .dbline 309
 0564           ;                  Delay_nms(10); 
 0564 0AE0              ldi R16,10
 0566 10E0              ldi R17,0
 0568 F8DD              xcall _Delay_nms
 056A                   .dbline 311
 056A           ; 
 056A           ;                  key_val=scan_key();  
 056A 13DE              xcall _scan_key
 056C 602F              mov R22,R16
 056E                   .dbline 313
 056E           ; 
 056E           ;                  switch(key_val)              
 056E 462F              mov R20,R22
 0570 5527              clr R21
 0572 4F3D              cpi R20,223
 0574 E0E0              ldi R30,0
 0576 5E07              cpc R21,R30
 0578 09F4              brne X2
 057A 41C0              xjmp L89
 057C           X2:
 057C 8FED              ldi R24,223
 057E 90E0              ldi R25,0
 0580 8417              cp R24,R20
 0582 9507              cpc R25,R21
 0584 84F0              brlt L108
 0586           L107:
 0586 4F37              cpi R20,127
 0588 E0E0              ldi R30,0
 058A 5E07              cpc R21,R30
 058C 09F4              brne X3
 058E 5DC0              xjmp L100
 0590           X3:
 0590 4F37              cpi R20,127
 0592 E0E0              ldi R30,0
 0594 5E07              cpc R21,R30
 0596 0CF4              brge X4
 0598 93C0              xjmp L79
 059A           X4:
 059A           L109:
 059A 4F3B              cpi R20,191
 059C E0E0              ldi R30,0
 059E 5E07              cpc R21,R30
 05A0 09F4              brne X5
 05A2 3CC0              xjmp L92
 05A4           X5:
 05A4 8DC0              xjmp L79
 05A6           L108:
 05A6 473F              cpi R20,247
 05A8 E0E0              ldi R30,0
 05AA 5E07              cpc R21,R30
 05AC 09F4              brne X6
 05AE 72C0              xjmp L105
 05B0           X6:
 05B0 87EF              ldi R24,247
 05B2 90E0              ldi R25,0
 05B4 8417              cp R24,R20
 05B6 9507              cpc R25,R21
 05B8 2CF0              brlt L111
 05BA           L110:
 05BA 4F3E              cpi R20,239
 05BC E0E0              ldi R30,0
 05BE 5E07              cpc R21,R30
 05C0 39F0              breq L81
 05C2 7EC0              xjmp L79
 05C4           L111:
 05C4 4B3F              cpi R20,251
 05C6 E0E0              ldi R30,0
 05C8 5E07              cpc R21,R30
 05CA 09F4              brne X7
 05CC 4CC0              xjmp L103
 05CE           X7:
 05CE 78C0              xjmp L79
 05D0           X0:
 05D0                   .dbline 314
 05D0           ;                  {                            
 05D0           L81:
 05D0                   .dbline 315
 05D0           ;                       case 0xef:time1.min++;
 05D0 80910700          lds R24,_time1+1
 05D4 8F5F              subi R24,255    ; addi 1
 05D6 80930700          sts _time1+1,R24
 05DA                   .dbline 316
 05DA           ;                                 if(time1.min>59){time1.min=0;
 05DA 8BE3              ldi R24,59
 05DC 20900700          lds R2,_time1+1
 05E0 8215              cp R24,R2
 05E2 08F0              brlo X8
 05E4 6DC0              xjmp L79
 05E6           X8:
 05E6                   .dbline 316
 05E6                   .dbline 316
 05E6 2224              clr R2
 05E8 20920700          sts _time1+1,R2
 05EC                   .dbline 317
 05EC           ;                                                         if(time1.hour<23)time1.hour++;
 05EC 80910600          lds R24,_time1
 05F0 8731              cpi R24,23
 05F2 08F0              brlo X9
 05F4 65C0              xjmp L79
 05F6           X9:
 05F6                   .dbline 317
 05F6 8F5F              subi R24,255    ; addi 1
 05F8 80930600          sts _time1,R24
 05FC                   .dbline 318
 05FC           ;                                                                     }break;  
 05FC                   .dbline 318
 05FC 61C0              xjmp L79
 05FE           L89:
 05FE                   .dbline 319
 05FE           ;                       case 0xdf:time1.hour++;if(time1.hour>23)time1.hour=0;break;                                                                                                             //加法调整"时"
 05FE 80910600          lds R24,_time1
 0602 8F5F              subi R24,255    ; addi 1
 0604 80930600          sts _time1,R24
 0608                   .dbline 319
 0608 87E1              ldi R24,23
 060A 20900600          lds R2,_time1
 060E 8215              cp R24,R2
 0610 08F0              brlo X10
 0612 56C0              xjmp L79
 0614           X10:
 0614                   .dbline 319
 0614 2224              clr R2
 0616 20920600          sts _time1,R2
 061A                   .dbline 319
 061A 52C0              xjmp L79
 061C           L92:
 061C                   .dbline 320
 061C           ;                       case 0xbf:time2.min++;
 061C 80910300          lds R24,_time2+1
 0620 8F5F              subi R24,255    ; addi 1
 0622 80930300          sts _time2+1,R24
 0626                   .dbline 321
 0626           ;                                 if(time2.min>59){time2.min=0;
 0626 8BE3              ldi R24,59
 0628 20900300          lds R2,_time2+1
 062C 8215              cp R24,R2
 062E 08F0              brlo X11
 0630 47C0              xjmp L79
 0632           X11:
 0632                   .dbline 321
 0632                   .dbline 321
 0632 2224              clr R2
 0634 20920300          sts _time2+1,R2
 0638                   .dbline 322
 0638           ;                                                         if(time2.hour<23)time2.hour++;
 0638 80910200          lds R24,_time2
 063C 8731              cpi R24,23
 063E 08F0              brlo X12
 0640 3FC0              xjmp L79
 0642           X12:
 0642                   .dbline 322
 0642 8F5F              subi R24,255    ; addi 1
 0644 80930200          sts _time2,R24
 0648                   .dbline 323
 0648           ;                                                                     }break; 
 0648                   .dbline 323
 0648 3BC0              xjmp L79
 064A           L100:
 064A                   .dbline 324
 064A           ;                       case 0x7f:time2.hour++;if(time2.hour>23)time2.hour=0;break;     
 064A 80910200          lds R24,_time2
 064E 8F5F              subi R24,255    ; addi 1
 0650 80930200          sts _time2,R24
 0654                   .dbline 324
 0654 87E1              ldi R24,23
 0656 20900200          lds R2,_time2
 065A 8215              cp R24,R2
 065C 88F5              brsh L79
 065E                   .dbline 324
 065E 2224              clr R2
 0660 20920200          sts _time2,R2
 0664                   .dbline 324
 0664 2DC0              xjmp L79
 0666           L103:
 0666                   .dbline 327
 0666           ;                                                                                       
 0666           ;                       //*************************
 0666           ;                       case 0xfb:wr_24c01(11,time2.hour);
 0666 20910200          lds R18,_time2
 066A 0BE0              ldi R16,11
 066C 8DDE              xcall _wr_24c01
 066E                   .dbline 328
 066E           ;                                Delay_nms(10); 
 066E 0AE0              ldi R16,10
 0670 10E0              ldi R17,0
 0672 73DD              xcall _Delay_nms
 0674                   .dbline 329
 0674           ;                                wr_24c01(12,time2.min); 
 0674 20910300          lds R18,_time2+1
 0678 0CE0              ldi R16,12
 067A 86DE              xcall _wr_24c01
 067C                   .dbline 330
 067C           ;                                Delay_nms(10); 
 067C 0AE0              ldi R16,10
 067E 10E0              ldi R17,0
 0680 6CDD              xcall _Delay_nms
 0682                   .dbline 331
 0682           ;                                DisplayOneChar(13,1,0x57); 
 0682 87E5              ldi R24,87
 0684 8883              std y+0,R24
 0686 21E0              ldi R18,1
 0688 0DE0              ldi R16,13
 068A F9DC              xcall _DisplayOneChar
 068C                   .dbline 332
 068C           ;                                Delay_nms(10);break; 
 068C 0AE0              ldi R16,10
 068E 10E0              ldi R17,0
 0690 64DD              xcall _Delay_nms
 0692                   .dbline 332
 0692 16C0              xjmp L79
 0694           L105:
 0694                   .dbline 333
 0694           ;                       case 0xf7:time2.hour=rd_24c01(11); 
 0694 0BE0              ldi R16,11
 0696 1BDE              xcall _rd_24c01
 0698 00930200          sts _time2,R16
 069C                   .dbline 334
 069C           ;                                Delay_nms(10); 
 069C 0AE0              ldi R16,10
 069E 10E0              ldi R17,0
 06A0 5CDD              xcall _Delay_nms
 06A2                   .dbline 335
 06A2           ;                                time2.min=rd_24c01(12); 
 06A2 0CE0              ldi R16,12
 06A4 14DE              xcall _rd_24c01
 06A6 00930300          sts _time2+1,R16
 06AA                   .dbline 336
 06AA           ;                                Delay_nms(10); 
 06AA 0AE0              ldi R16,10
 06AC 10E0              ldi R17,0
 06AE 55DD              xcall _Delay_nms
 06B0                   .dbline 337
 06B0           ;                                DisplayOneChar(13,1,0x52); 
 06B0 82E5              ldi R24,82
 06B2 8883              std y+0,R24
 06B4 21E0              ldi R18,1
 06B6 0DE0              ldi R16,13
 06B8 E2DC              xcall _DisplayOneChar
 06BA                   .dbline 338
 06BA           ;                                Delay_nms(10);break;    
 06BA 0AE0              ldi R16,10
 06BC 10E0              ldi R17,0
 06BE 4DDD              xcall _Delay_nms
 06C0                   .dbline 338
 06C0                   .dbline 339
 06C0           ;                       default:break;          
 06C0           L79:
 06C0                   .dbline 341
 06C0 0CE2              ldi R16,300
 06C2 11E0              ldi R17,1
 06C4 4ADD              xcall _Delay_nms
 06C6                   .dbline 342
 06C6 80E2              ldi R24,32
 06C8 8883              std y+0,R24
 06CA 21E0              ldi R18,1
 06CC 0DE0              ldi R16,13
 06CE D7DC              xcall _DisplayOneChar
 06D0                   .dbline 343
 06D0 0AE0              ldi R16,10
 06D2 10E0              ldi R17,0
 06D4 42DD              xcall _Delay_nms
 06D6                   .dbline 345
 06D6           L70:
 06D6                   .dbline 287
 06D6 BDCE              xjmp L69
 06D8           X1:
 06D8                   .dbline -2
 06D8           L68:
 06D8 2296              adiw R28,2
 06DA                   .dbline 0 ; func end
 06DA 0895              ret
 06DC                   .dbsym r key_val 22 c
 06DC                   .dbend
                        .area vector(rom, abs)
                        .org 32
 0020 0C946E03          jmp _timer1_ovf_isr
                        .area text(rom, con, rel)
 06DC                   .dbfile d:\MYDOCU~1\ac15-2\ac15-2.c
 06DC                   .dbfunc e timer1_ovf_isr _timer1_ovf_isr fV
                        .even
 06DC           _timer1_ovf_isr::
 06DC 2A92              st -y,R2
 06DE 3A92              st -y,R3
 06E0 8A93              st -y,R24
 06E2 9A93              st -y,R25
 06E4 2FB6              in R2,0x3f
 06E6 2A92              st -y,R2
 06E8                   .dbline -1
 06E8                   .dbline 350
 06E8           ;                       }                               
 06E8           ;                       Delay_nms(300);
 06E8           ;                       DisplayOneChar(13,1,0x20); 
 06E8           ;                       Delay_nms(10); 
 06E8           ;                                               
 06E8           ;                }                              
 06E8           ; }                
 06E8           ; /*********************定时器T1中断子函数************************/
 06E8           ; #pragma interrupt_handler timer1_ovf_isr:9
 06E8           ; void timer1_ovf_isr(void)
 06E8           ; {
 06E8                   .dbline 352
 06E8           ;  //TIMER1 has overflowed
 06E8           ;  TCNT1H = 0xF3; //reload counter high value
 06E8 83EF              ldi R24,243
 06EA 8DBD              out 0x2d,R24
 06EC                   .dbline 353
 06EC           ;  TCNT1L = 0xCB; //reload counter low value
 06EC 8BEC              ldi R24,203
 06EE 8CBD              out 0x2c,R24
 06F0                   .dbline 354
 06F0           ;  if(++time1.dida>=10){time1.dida=0;time1.sec++;}//计时
 06F0 80910900          lds R24,_time1+3
 06F4 8F5F              subi R24,255    ; addi 1
 06F6 282E              mov R2,R24
 06F8 20920900          sts _time1+3,R2
 06FC 8A30              cpi R24,10
 06FE 40F0              brlo L113
 0700                   .dbline 354
 0700                   .dbline 354
 0700 2224              clr R2
 0702 20920900          sts _time1+3,R2
 0706                   .dbline 354
 0706 80910800          lds R24,_time1+2
 070A 8F5F              subi R24,255    ; addi 1
 070C 80930800          sts _time1+2,R24
 0710                   .dbline 354
 0710           L113:
 0710                   .dbline 355
 0710           ;  if(time1.sec>=60){time1.sec=0;time1.min++;}
 0710 80910800          lds R24,_time1+2
 0714 8C33              cpi R24,60
 0716 40F0              brlo L118
 0718                   .dbline 355
 0718                   .dbline 355
 0718 2224              clr R2
 071A 20920800          sts _time1+2,R2
 071E                   .dbline 355
 071E 80910700          lds R24,_time1+1
 0722 8F5F              subi R24,255    ; addi 1
 0724 80930700          sts _time1+1,R24
 0728                   .dbline 355
 0728           L118:
 0728                   .dbline 356
 0728           ;  if(time1.min>=60){time1.min=0;time1.hour++;}
 0728 80910700          lds R24,_time1+1
 072C 8C33              cpi R24,60
 072E 40F0              brlo L123
 0730                   .dbline 356
 0730                   .dbline 356
 0730 2224              clr R2
 0732 20920700          sts _time1+1,R2
 0736                   .dbline 356
 0736 80910600          lds R24,_time1
 073A 8F5F              subi R24,255    ; addi 1
 073C 80930600          sts _time1,R24
 0740                   .dbline 356
 0740           L123:
 0740                   .dbline 357
 0740           ;  if(time1.hour>=24){time1.hour=0;}
 0740 80910600          lds R24,_time1
 0744 8831              cpi R24,24
 0746 18F0              brlo L127
 0748                   .dbline 357
 0748                   .dbline 357
 0748 2224              clr R2
 074A 20920600          sts _time1,R2
 074E                   .dbline 357
 074E           L127:
 074E                   .dbline 359
 074E           ;  //-------------------
 074E           ;  if((time1.hour==time2.hour)&&(time1.min==time2.min))LED_0;
 074E 20900200          lds R2,_time2
 0752 30900600          lds R3,_time1
 0756 3214              cp R3,R2
 0758 41F4              brne L129
 075A 20900300          lds R2,_time2+1
 075E 30900700          lds R3,_time1+1
 0762 3214              cp R3,R2
 0764 11F4              brne L129
 0766                   .dbline 359
 0766 C798              cbi 0x18,7
 0768 01C0              xjmp L130
 076A           L129:
 076A                   .dbline 360
 076A C79A              sbi 0x18,7
 076C           L130:
 076C                   .dbline -2
 076C           L112:
 076C 2990              ld R2,y+
 076E 2FBE              out 0x3f,R2
 0770 9991              ld R25,y+
 0772 8991              ld R24,y+
 0774 3990              ld R3,y+
 0776 2990              ld R2,y+
 0778                   .dbline 0 ; func end
 0778 1895              reti
 077A                   .dbend
 077A                   .dbfunc e init_devices _init_devices fV
                        .even
 077A           _init_devices::
 077A                   .dbline -1
 077A                   .dbline 364
 077A           ;  else LED_1;
 077A           ; }
 077A           ; /**********************器件初始化***********************/
 077A           ; void init_devices(void)
 077A           ; {
 077A                   .dbline 366
 077A           ;  //stop errant interrupts until set up
 077A           ;  CLI(); //disable all interrupts
 077A F894              cli
 077C                   .dbline 367
 077C           ;  port_init();
 077C FDDC              xcall _port_init
 077E                   .dbline 368
 077E           ;  timer1_init();
 077E 41DE              xcall _timer1_init
 0780                   .dbline 369
 0780           ;  MCUCR = 0x00;
 0780 2224              clr R2
 0782 25BE              out 0x35,R2
 0784                   .dbline 370
 0784           ;  GICR  = 0x00;
 0784 2BBE              out 0x3b,R2
 0786                   .dbline 371
 0786           ;  TIMSK = 0x04; //timer interrupt sources
 0786 84E0              ldi R24,4
 0788 89BF              out 0x39,R24
 078A                   .dbline 372
 078A           ;  SEI(); //re-enable interrupts
 078A 7894              sei
 078C                   .dbline -2
 078C           L133:
 078C                   .dbline 0 ; func end
 078C 0895              ret
 078E                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile d:\MYDOCU~1\ac15-2\ac15-2.c
 0000           _cnt::
 0000                   .blkb 1
 0001                   .dbsym e cnt _cnt c
 0001           _com_data::
 0001                   .blkb 1
 0002                   .dbsym e com_data _com_data c
 0002           _time2::
 0002                   .blkb 4
 0006                   .dbstruct 0 4 date
 0006                   .dbfield 0 hour c
 0006                   .dbfield 1 min c
 0006                   .dbfield 2 sec c
 0006                   .dbfield 3 dida c
 0006                   .dbend
 0006                   .dbsym e time2 _time2 S[date]
 0006           _time1::
 0006                   .blkb 4
 000A                   .dbsym e time1 _time1 S[date]
