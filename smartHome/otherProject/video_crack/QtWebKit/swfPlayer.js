var mp;var playerId;var mediaUrl;window.onload=initPage;window.onunload=unonload;window.onresize=sizeChanged;function create_player(){	mp = new MediaPlayer();	if(typeof(mp)!='object')	{		alert("MediaPlayer create error!");		return;	}	else	{		playerId=mp.getPlayerInstanceID();		var flag=mp.bindPlayerInstance(playerId);		if(flag!=0)			alert("Bind Player error");	}	return;}function getUrl(){	var url = location.search;	if(url.indexOf("?")!=-1)	{		return url.substr(1);	}	return null;}function loadMatchParser(parser){	var t = document.createElement('script');	t.setAttribute("type", "text/javascript");	t.setAttribute("src", parser);	document.getElementsByTagName("head")[0].appendChild(t);}var videoUrl;var parserLoaded = false;var waitLoadTimer;	function loadedParserCheck(){	if(parserLoaded == true)	{		clearInterval(waitLoadTimer);			getVideoUrl(videoUrl);	}}function findParser(url){			var obj = jQuery.parseJSON(crackList);	for(i=0;i<obj.websiteList.length;++i)	{		var Reg = new RegExp(obj.websiteList[i].match);		if(Reg.test(url))		{			loadMatchParser(obj.websiteList[i].parser);			waitLoadTimer = setInterval( loadedParserCheck , 200);			videoUrl = url;			break;		}			}}function addVideoSegUrl(fileType, no, seconds, url){	//alert("fileType: " + fileType + "no : " + no + "seconds: " + seconds + "url: "+ url);}var flvVideoList;var flvVideoListCreated;function addVideoUrlsJson(outJson){	var obj = jQuery.parseJSON(outJson);	var flvObj = obj.video.flv;	if(flvObj)	{		flvVideoList = Array(flvObj.length);		for(i=0;i<flvObj.length;i++)		{			flvVideoList.push(flvObj[i].url);		}		flvVideoListCreated = true;	}}var waitVideoListOkTimer;function playVideoList(){	if(flvVideoListCreated)	{		clearInterval(waitVideoListOkTimer);		create_player();		setVideoSize(100,100,50,80);		play(flvVideoList[0]);	}	}function initPage(){	var url = getUrl();	findParser(url);	waitVideoListOkTimer = setInterval( playVideoList , 200);}function unonload(){	if(typeof(mp)=='object')	{		stop();	}}function play(url){	mp.setMediaSource(mediaUrl);	mp.play();}function pause(){	mp.pause();}function resume(){	mp.resume();}function stop(){	mp.stop();	mp.unbindPlayerInstance(playerId);	mp="";}function setVideoSize(left, top, width, height){	var rect=new Rectangle();	rect.left = left;	rect.top = top;	rect.width = width;	rect.height = height;		mp.setVideoDisplayArea(rect);}/*var winWidth = 0;var winHeight = 0;function sizeChanged() //函数：获取尺寸{	 //获取窗口宽度	 if (window.innerWidth)		   winWidth = window.innerWidth;	 else if ((document.body) && (document.body.clientWidth))		   winWidth = document.body.clientWidth;	 //获取窗口高度	 if (window.innerHeight)		   winHeight = window.innerHeight;	 else if ((document.body) && (document.body.clientHeight))		   winHeight = document.body.clientHeight;      alert("winWidth:"+winWidth+"winHeight:"+winHeight);	 //通过深入Document内部对body进行检测，获取窗口大小	 if (document.documentElement  && document.documentElement.clientHeight &&										  document.documentElement.clientWidth)	 {		 winHeight = document.documentElement.clientHeight;		 winWidth = document.documentElement.clientWidth;	 }	    alert("winWidth:"+winWidth+"winHeight:"+winHeight);}*/